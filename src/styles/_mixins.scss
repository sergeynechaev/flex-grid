@mixin create-grid-columns($columns: $grid-col-width){
    @each $column, $value in $columns{
      .col-#{$column}{
        -ms-flex-preferred-size: #{$value}%;
          -webkit-flex-basis: #{$value}%;
          flex-basis: #{$value}%;
          max-width: #{$value}%;
      }
    }
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}

@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}


/* FlexBox */

@mixin flex-box() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

/* flex = flex-grow, flex-shrink, flex-basis: 0 1 auto by default */
@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin flex-grow($val) {
    -webkit-box-flex: $val;
    -webkit-flex-grow: $val;
    -ms-flex-positive: $val;
    flex-grow: $val;
}

@mixin flex-shrink($val) {
    -webkit-box-shrink: $val;
    -webkit-flex-shrink: $val;
    -ms-flex-negative: $val;
    flex-shrink: $val;
}

@mixin flex-basis($val) {
    -webkit-flex-basis: $val;
    -ms-flex-preferred-size: $val;
    flex-basis: $val;
}

@mixin flex-flow($val) {
    -webkit-flex-flow: $val;
    -moz-flex-flow: $val;
    -ms-flex-flow: $val;
    flex-flow: $val;
}

@mixin flex-wrap($val) {
    -webkit-flex-wrap: $val;
    -moz-flex-wrap: $val;
    -ms-flex-wrap: $val;
    flex-wrap: $val;
}

/* flex-direction = row by default */
@mixin flex-direction($direction) {
    @if $direction == column {
        -webkit-flex-direction: vertical;
        -moz-flex-direction: vertical;
        -ms-flex-direction: column;
        -webkit-flex-direction: column;
        flex-direction: column;
    } @else {
        -webkit-flex-direction: horizontal;
        -moz-flex-direction: horizontal;
        -ms-flex-direction: row;
        -webkit-flex-direction: row;
        flex-direction: row;
    }
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

@mixin justify-content($val) {
    -webkit-box-pack: $val;
    -webkit-justify-content: $val;
    -ms-flex-pack: $val;
    justify-content: $val;
}

@mixin align-content($val) {
    -webkit-align-content: $val;
    -ms-flex-line-pack:$val;
    align-content: $val;
}

@mixin align-self($val) {
    -webkit-align-self: $val;
    -ms-flex-item-align: $val;
    align-self: $val;
}

@mixin align-items($val) {
    -webkit-box-align: $val;
    -webkit-align-items: $val;
    -ms-flex-align: $val;
    align-items: $val;
}

/* -FlexBox */


@mixin box-shadow($args...){
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    -o-box-shadow: $args;
    box-shadow: $args;
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin transition-duration($args...) {
    -webkit-transition-duration: $args;
    -moz-transition-duration: $args;
    -o-transition-duration: $args;
    transition-duration: $args;
}

@mixin transform($val){
    -webkit-transform: $val;
    -moz-transform: $val;
    -ms-transform: $val;
    -o-transform: $val;
    transform: $val;
}

@mixin transition-property($val){
    -webkit-transition-property: -webkit-#{$val};
    -moz-transition-property: -moz-#{$val};
    transition-property: #{$val};
}

@mixin btn($bg, $color){
    background: $bg;
    color: $color;

    &:hover{
        background: lighten($bg, 5%);
    }

    &:active{
        background: darken($bg, 5%);
    }
}

@mixin btn-outline($val){
    
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin box-white-shadow($radius: 0) {
	@if $radius != 0 {
		border-radius: $radius;
	}
	background: #fff;
	-webkit-box-shadow:0 1px 6px rgba(0,0,0,.25);
			    box-shadow:0 1px 6px rgba(0,0,0,.25);
}

